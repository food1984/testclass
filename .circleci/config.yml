version: 2.1

jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.7.1

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - ./venv

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pip install -r test_requirements.txt
            coverage run -m pytest --junitxml=test-results/test-results.xml \

            coverage report
            coverage xml -o test-results/coverage.xml
            coverage html --omit=/usr/local/lib*
            python-codacy-coverage -r test-results/coverage.xml


      - store_test_results:
          path: test-results

      - store_artifacts:
          path: artifacts

      - run:
          name: create package
          command: |
            pip install --user --upgrade setuptools wheel pkutils
            python setup.py sdist bdist_wheel
            python setup.py --version >dist/version.txt

      - persist_to_workspace:
          root: dist
          paths:
          - .

  publish:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./packages
      - run:
          name: publish package
          command: |
            ls -l packages
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} \
            -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} \
            -delete ${VERSION} "release-$(cat packages/version.txt)" ./packages

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only: master
